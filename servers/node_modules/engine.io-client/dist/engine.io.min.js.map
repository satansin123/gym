{"version":3,"file":"engine.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globals.js","../build/esm/util.js","../build/esm/transport.js","../build/esm/contrib/parseqs.js","../build/esm/transports/polling.js","../build/esm/contrib/has-cors.js","../build/esm/transports/polling-xhr.js","../build/esm/transports/websocket.js","../build/esm/transports/webtransport.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, } from \"./globals.node.js\";\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this._offlineEventListener, false);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this._resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, this._pingInterval + this._pingTimeout);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this._offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","length","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","header","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","_Error","reason","description","context","_this","_inheritsLoose","_wrapNativeSuper","Error","Transport","_Emitter","_this2","writable","_assertThisInitialized","query","socket","forceBase64","_proto","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","Polling","_Transport","_polling","_poll","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this4","_this5","count","join","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","_createClass","get","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","_Polling","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","_create","_proto2","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","XHR","_BaseXHR","_this6","_extends","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_BaseWS","_packet","WT","_transport","WebTransport","transportOptions","name","closed","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_typeof","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","_resetPingTimeout","onHandshake","JSON","_sendPacket","code","pingInterval","pingTimeout","_pingTimeoutTimer","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_SocketWithoutUpgrade","_upgrades","_probe","_this7","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","_SocketWithUpgrade","o","map","DEFAULT_TRANSPORTS","filter"],"mappings":"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"}